/**
\page gcfinvtkd2 GCF In VTK Designer 2
\brief Provides description of usage of GCF in VTK Designer.

\image html gcfInVtk1.png

The user interface for VTK Designer is designed to help its users develop complex 
visualization scenarios and to allow deployment of custom visualization applications on it. 
Towards this the UI looks both like an integrated development environment and like a 
application shell. In this chapter we introduce the user interface of VTK Designer.

When VTK Designer is started for the first time, it would look like the window shown below.

\image html gcfInVtk2.png

\section uiElements Elements of the user interface.

The User interface consists of:
\li A Menu Strip on which all UI actions are attractively placed.

\image html gcfInVtkMenuStrip.png

\li A Tool Box on which you can find tools and options exposed by different components of VTK Designer.

\image html gcfInVtkToolBox.png

\li A Workspace on which you can find all sorts of editors and output viewers.

\image html gcfInVtkWS.png

\li A Configuration Panel where you can configure objects chosen in the editor.

\image html gcfInVtkconfigPanel.png

\li A Message Area where debug, warning and critical messages from all components in VTK Designer are shown.

\image html gcfInVtkMsgArea.png

\li A Thumbnail Preview which shows a snapshot of the current visualization network.

\image html gcfInVtktnp.png

\section vtkdesignercomponents VTK Designer Components

VTK Designer is composed of several components built using the award winning 
"Generic Component Framework" (or GCF). It provides the necessary software 
infrastructure to assemble VTK Designer from its components. The basic VTK 

Designer comes with the following components:

\li VTK Designer IDE
\li Class Explorer
\li Visualization System Canvas
\li VTK Output Window
\li Property Editor
\li Navigation Panel
\li Message Log Window
\li Configuration Dialog Box.
\li Project Manager

We also have custom components for that will help enhance your experience with 
VTK Designer also allows you to do more than just assembling visualization networks.

\li Scripting Framework

Using the scripting framework, you can script the behavior of each node in the pipeline. 
Whats more, you can also import custom Qt UI forms and script them also. 

\li Reporting Framework (not for release yet)

Using the reporting framework, you can create PDF reports consisting of detailed technical 
information from your visualization experiment.

\li OpenHaptics Integration (not for release yet)

Using the OpenHaptics Integration plugin, you will be able to use SensAble Technology's Haptic 
Devices with their OpenHaptics toolkit to haptically render your visualization on to the device. 
This means that you will be able to touch and feel your visualization and also perform meaningful 
haptics visualization.

\li Distributed/Parallel Visualization (not for release yet)

Using the Distributed/Parallel Visualization plugin, you will be able to split your visualization 
network into several nodes in your cluster or into several processes on your local system to 
speed your visualization processes.

\li Volumetric Visualization Support (not for release yet)

Using the Volumetric Visualization plugin, you will be able to perform volumetric visualization 
using specialized ray tracing algorithms from VTK. 

download Download VTK Designer from http://www.vcreatelogic.com/oss/vtkdesigner. 

*/

